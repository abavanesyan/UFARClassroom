@page "/ai"
@using System.Text.Json
@inject HttpClient Http
@inject IJSRuntime JS

@rendermode InteractiveServer
<div class="ai-page">
    <h1 class="text-center ai-interaction-heading">UFAR Clasroom</h1>

    <script src="~/js/clipboard.js"></script>
    <script>
        window.animateText = function (elementId, text, speed = 100) {
            const element = document.getElementById(elementId);
            let i = 0;
            element.innerHTML = '';
            function typeWriter() {
                if (i < text.length) {
                    if (text.charAt(i) === '\n') {
                        element.innerHTML += '<br>';
                    } else {
                        element.innerHTML += text.charAt(i);
                    }
                    i++;
                    setTimeout(typeWriter, speed);
                }
            }
            typeWriter();
        };
    </script>

    <!-- Guide Text -->
    <div class="guide-text-container mt-5">
        <p id="guideText" class="guide-text">
            Here you can ask your deadlines, exams, and other important dates to the AI, and the AI will assist you in managing and tracking them effectively. Simply type your query in the input box and click "Ask AI" to get started.
        </p>
    </div>

    <div class="container mt-5 ai-form-container">
        <div class="card shadow-lg p-4 border-0 rounded-4">
            <div class="card-body">
                <div class="input-group mb-3">
                    <input @bind="userInput" class="form-control shadow-sm rounded-start-3" placeholder="Ask something..." />
                    <button class="btn btn-primary shadow-sm rounded-end-3" @onclick="AskAI">Ask AI</button>
                </div>
                <div class="response-container mt-4">
                    <p id="responseText" class="response-text p-3 rounded-3 bg-light shadow-sm">@response</p>
                </div>

                @if (!string.IsNullOrEmpty(response))
                {
                    <div class="rating-buttons mt-3">
                        <button class="btn btn-success shadow-sm me-2" @onclick="() => RateResponse(true)">👍</button>
                        <button class="btn btn-danger shadow-sm" @onclick="() => RateResponse(false)">👎</button>
                    </div>
                }
                @if (showFeedbackInput)
                {
                    <div class="mt-3">
                        <textarea @bind="feedback" class="form-control shadow-sm" placeholder="Please provide your feedback..."></textarea>
                        <button class="btn btn-primary shadow-sm mt-2" @onclick="SubmitFeedback">Submit Feedback</button>
                    </div>
                }
                <div class="mt-3">
                    <button class="btn btn-secondary shadow-sm ms-2" @onclick="ClearInput">
                        Clear
                    </button>
                    <button class="btn btn-secondary shadow-sm ms-2" @onclick="CopyResponse">
                        Copy
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? userInput; // Input from the user
    private string? response; // Response from the AI
    private string? feedback; // User feedback
    private bool showFeedbackInput; // Controls the feedback input visibility

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Apply animation to guide text when the page loads
            await JS.InvokeVoidAsync("window.animateText", "guideText", "Here you can ask your deadlines, exams, and other important dates to the AI, and the AI will assist you in managing and tracking them effectively. Simply type your query in the input box and click 'Ask AI' to get started.", 50);
        }
    }

    private async Task AskAI()
    {
        if (!string.IsNullOrWhiteSpace(userInput))
        {
            try
            {
                var content = new StringContent($"\"{userInput}\"", System.Text.Encoding.UTF8, "application/json");
                var result = await Http.PostAsync("https://ufartimemanagement.azurewebsites.net/api/ai/ask-ai", content);

                if (result.IsSuccessStatusCode)
                {
                    var jsonResponse = await result.Content.ReadFromJsonAsync<JsonElement>();
                    response = jsonResponse.GetProperty("response").GetString() ?? "No response from AI.";
                    await JS.InvokeVoidAsync("window.animateText", "responseText", response, 50);
                }
                else
                {
                    response = "Error: Unable to get a response from the AI service.";
                }
            }
            catch (Exception ex)
            {
                response = $"Error: {ex.Message}";
            }
        }
        else
        {
            response = "Please enter a message.";
        }
    }

    private void ClearInput()
    {
        userInput = string.Empty;
        response = string.Empty;
        feedback = string.Empty;
        showFeedbackInput = false;
    }

    private void RateResponse(bool isPositive)
    {
        if (isPositive)
        {
            Console.WriteLine("AI response rated positively.");
            showFeedbackInput = false;
        }
        else
        {
            Console.WriteLine("AI response rated negatively.");
            showFeedbackInput = true;
        }
    }

    private void SubmitFeedback()
    {
        Console.WriteLine($"Feedback submitted: {feedback}");
        feedback = string.Empty;
        showFeedbackInput = false;
    }

    private async Task CopyResponse()
    {
        if (!string.IsNullOrEmpty(response))
        {
            try
            {
                await JS.InvokeVoidAsync("copyToClipboard", response);
                Console.WriteLine("Copy to clipboard successful.");
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error copying to clipboard: {ex.Message}");
            }
        }
    }
}
